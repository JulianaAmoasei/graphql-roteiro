scalar DateTime

type User {
  id: ID!
  nome: String!
  ativo: Boolean!
  email: String!
  role: Role!
  createdAt: DateTime
}

type Role {
  id: ID!
  type: RolesType!
}

enum RolesType {
  ESTUDANTE
  DOCENTE
  COORDENACAO
}

type Query {
  users: [User!]!
  user(id: ID!): User!
}

type Mutation {
 adicionaUser(user: UserInput): User!
   atualizaUser(id: ID!, user: UserInput): atualizaUserResposta!
 removeUser(id: ID!): ID!
}

input UserInput {
  nome: String
  ativo: Boolean
  email: String
  role: RolesType
  createdAt: DateTime
}

interface respostaCustom {
  code: String!
  success: Boolean!
  message: String!
}

type atualizaUserResposta implements respostaCustom {
  code: String!
  success: Boolean!
  message: String!
  user: User
}